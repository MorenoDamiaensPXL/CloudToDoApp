name: Backend

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node.js
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: backend/package-lock.json

      # 3) Dependencies
      - name: Install dependencies
        run: npm ci

      # 4) Build (mag falen)
      - name: Build the code
        run: npm run build || true

      # 5) Tests + coverage -> forceer LCOV + HTML via nyc
      - name: Run unit tests with coverage
        run: |
          set -euxo pipefail
          npx nyc@15.1.0 \
            --all \
            --reporter=lcov \
            --reporter=html \
            --report-dir=coverage \
            --extension .ts \
            --extension .js \
            npm test || true

          echo "== After tests, list coverage files =="
          find coverage -type f -maxdepth 6 -print || true

      # 6) Normaliseer naar coverage/lcov.info (fallback vanuit coverage-final.json)
      - name: Normalize coverage to LCOV (coverage/lcov.info)
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p coverage
          if [ -f coverage/lcov.info ] && [ -s coverage/lcov.info ]; then
            echo "✅ LCOV present at coverage/lcov.info"
          else
            JSON="$(find . -path ./node_modules -prune -o -type f -name 'coverage-final.json' -print | head -n1 || true)"
            if [ -n "${JSON:-}" ]; then
              COVDIR="$(dirname "$JSON")"
              echo "Generating LCOV via nyc from: $JSON"
              npx nyc@15.1.0 report --reporter=lcov -t "$COVDIR" --report-dir "$COVDIR"
              [ -f "$COVDIR/lcov.info" ] && cp "$COVDIR/lcov.info" coverage/lcov.info || true
            fi
          fi

      # 7) Zelfde truc als frontend: paden ‘flattenen’ zodat er geen folder-rijen verschijnen
      - name: Flatten LCOV paths (remove directories, keep all metrics)
        if: always()
        run: |
          if [ -s coverage/lcov.info ]; then
            awk '
              /^SF:/ {
                n = split($0, a, /[\/\\]/);
                print "SF:" a[n];
                next
              }
              { print }
            ' coverage/lcov.info > coverage/lcov.flattened
            mv coverage/lcov.flattened coverage/lcov.info
            echo "✅ Flattened paths in LCOV; directories zullen niet meer gegroepeerd worden."
          else
            echo "⚠️ No LCOV to flatten."
          fi

      # 8) Mooie summary tabel (zelfde action als frontend)
      - name: Better Test Reports Action
        if: ${{ always() && hashFiles('backend/coverage/lcov.info') != '' }}
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: backend/coverage/lcov.info   # pad t.o.v. repo-root!
          upload-coverage-report: true
          working-directory: backend

      # 9) HTML coverage uploaden als artifact
      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: |
            backend/coverage/**
            backend/**/coverage/**
          if-no-files-found: ignore
          overwrite: true
