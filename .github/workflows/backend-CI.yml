name: Backend

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Alles onder /backend uitvoeren
    defaults:
      run:
        working-directory: backend

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node/NPM klaarzetten
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: backend/package-lock.json

      # 3) Dependencies
      - name: Install dependencies
        run: npm ci

      # 4) Build (mag ontbreken; dan laten we de job doorlopen)
      - name: Build the code
        run: npm run build || true

      # 5) Tests + coverage (laat job doorlopen bij failures)
      - name: Test code (unit tests + coverage)
        run: |
          set -euxo pipefail
          # Probeer standaard coverage te genereren
          npm test -- --coverage || true

          echo "== Na tests, toon coverage-files =="
          find . -maxdepth 6 -type f \( -name 'lcov.info' -o -name 'coverage-final.json' \) -print || true

      # 6) Normaliseer: als alleen JSON bestaat, maak LCOV aan met nyc
      - name: Ensure LCOV exists (convert from coverage-final.json if needed)
        shell: bash
        run: |
          set -euo pipefail
          # Bestaat er al een lcov.info ergens onder backend/coverage?
          FOUND="$(ls -1 coverage/lcov.info coverage/**/lcov.info 2>/dev/null | head -n1 || true)"
          if [ -n "$FOUND" ] && [ -s "$FOUND" ]; then
            echo "✅ LCOV gevonden: $FOUND"
          else
            JSON="$(find . -path ./node_modules -prune -o -type f -name 'coverage-final.json' -print | head -n1 || true)"
            if [ -n "${JSON:-}" ]; then
              COVDIR="$(dirname "$JSON")"
              echo "Geen LCOV, wel JSON. Converteer met nyc vanuit: $JSON"
              npx nyc@15.1.0 report --reporter=lcov -t "$COVDIR" --report-dir "$COVDIR"
              # Kopieer naar gestandaardiseerde plek
              mkdir -p coverage
              if [ -f "$COVDIR/lcov.info" ]; then
                cp "$COVDIR/lcov.info" coverage/lcov.info
                echo "✅ LCOV geschreven naar coverage/lcov.info"
              fi
            else
              echo "⚠️ Geen coverage-bestanden gevonden."
            fi
          fi

      # 7) Zoek het LCOV-bestand en geef pad door aan volgende stappen
      - name: Find LCOV path
        id: findcov
        shell: bash
        run: |
          set -euo pipefail
          FOUND="$(ls -1 coverage/lcov.info coverage/**/lcov.info 2>/dev/null | head -n1 || true)"
          echo "lcov=$FOUND" >> "$GITHUB_OUTPUT"
          if [ -n "$FOUND" ]; then
            echo "✅ LCOV voor reporter: $FOUND"
          else
            echo "⚠️ Geen LCOV gevonden; reporter wordt overgeslagen."
          fi

      # 8) Coverage-rapport in de run-samenvatting
      - name: Better Test Reports Action
        if: ${{ steps.findcov.outputs.lcov != '' }}
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: ${{ steps.findcov.outputs.lcov }}
          upload-coverage-report: true
          working-directory: backend

      # 9) Upload HTML coverage (als aanwezig)
      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: |
            backend/coverage/**
            backend/**/coverage/**
          if-no-files-found: ignore
          overwrite: true
