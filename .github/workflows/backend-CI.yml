name: Backend

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: backend/package-lock.json

      # 3) Dependencies
      - name: Install dependencies
        run: npm ci

      # 4) Build (mag ontbreken)
      - name: Build the code
        run: npm run build || true

      # 5) Tests + coverage (forceer via nyc, ongeacht testrunner)
      - name: Run unit tests with coverage
        run: |
          set -euxo pipefail
          # Forceer LCOV + HTML in ./coverage, ook wanneer files niet direct geÃ¯mporteerd worden
          npx nyc@15.1.0 \
            --all \
            --reporter=lcov \
            --reporter=html \
            --report-dir=coverage \
            --extension .ts \
            --extension .js \
            npm test || true

          echo "== Coverage bestanden =="
          find . -maxdepth 6 -type f \( -name lcov.info -o -name coverage-final.json -o -name index.html \) -print || true

      # 6) Normaliseer naar backend/coverage/lcov.info
      - name: Ensure LCOV exists
        id: ensure_lcov
        shell: bash
        run: |
          set -euo pipefail

          # 1) rechtstreekse output
          if [ -s coverage/lcov.info ]; then
            echo "lcov=coverage/lcov.info" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # 2) ergens dieper? (sommige runners nestelen het)
          LFOUND="$(ls -1 coverage/**/lcov.info 2>/dev/null | head -n1 || true)"
          if [ -n "$LFOUND" ] && [ -s "$LFOUND" ]; then
            mkdir -p coverage
            cp "$LFOUND" coverage/lcov.info
            echo "lcov=coverage/lcov.info" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # 3) JSON -> LCOV conversie als laatste redmiddel
          JSON="$(find . -path ./node_modules -prune -o -type f -name 'coverage-final.json' -print | head -n1 || true)"
          if [ -n "${JSON:-}" ]; then
            COVDIR="$(dirname "$JSON")"
            npx nyc@15.1.0 report --reporter=lcov -t "$COVDIR" --report-dir "$COVDIR"
            if [ -s "$COVDIR/lcov.info" ]; then
              mkdir -p coverage
              cp "$COVDIR/lcov.info" coverage/lcov.info
              echo "lcov=coverage/lcov.info" >> "$GITHUB_OUTPUT"
              exit 0
            fi
          fi

          echo "Geen LCOV beschikbaar."
          echo "lcov=" >> "$GITHUB_OUTPUT"

      # 7) Mooie tabel in job Summary (zelfde als frontend)
      - name: Better Test Reports Action
        if: ${{ steps.ensure_lcov.outputs.lcov != '' }}
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: backend
          coverage-file: ${{ steps.ensure_lcov.outputs.lcov }}
          upload-coverage-report: true

      # 8) HTML coverage als artifact
      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: |
            backend/coverage/**
            backend/**/coverage/**
          if-no-files-found: ignore
          overwrite: true
