name: Frontend CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      # 1) Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Setup Node environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 3) Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4) Build the Angular app
      - name: Build the code
        run: npm run build --if-present

      # 5) Run unit tests + code coverage
      - name: Run tests (unit + coverage)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          # Chrome sandbox fix for CI
          cat << 'SH' > /tmp/chrome-no-sandbox.sh
          #!/usr/bin/env bash
          BIN="$(command -v google-chrome || command -v google-chrome-stable || command -v chromium || command -v chromium-browser)"
          exec "$BIN" --no-sandbox --disable-setuid-sandbox --disable-gpu --disable-dev-shm-usage "$@"
          SH
          chmod +x /tmp/chrome-no-sandbox.sh
          export CHROME_BIN=/tmp/chrome-no-sandbox.sh

          xvfb-run -a npx ng test --watch=false --browsers=ChromeHeadless --code-coverage || true
        continue-on-error: true

      # 6) Normalize LCOV output
      - name: Normalize coverage path
        run: |
          set -euo pipefail
          echo "== Dump coverage tree =="
          find . -maxdepth 4 -type f -name 'lcov.info' -print
          mkdir -p frontend/coverage
          LCOV=$(find . -maxdepth 4 -type f -name 'lcov.info' | head -n 1 || true)
          if [ -z "$LCOV" ]; then
            echo "⚠️ Geen lcov.info gevonden, skipping."
            exit 0
          fi
          cp "$LCOV" frontend/coverage/lcov.info

      # 7) Better Test Reports (for GitHub summary)
      - name: Better Test Reports Action
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: frontend
          coverage-file: frontend/coverage/lcov.info
          upload-coverage-report: true

      # 8) Upload HTML coverage report
      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            frontend/coverage/**
          if-no-files-found: ignore
          overwrite: true
