name: Frontend

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build the code
        run: npx ng build --configuration production || true

      - name: Create CI Karma config (forces LCOV + HTML)
        run: |
          cat > karma.ci.conf.js <<'JS'
          const path = require('path');
          module.exports = function (config) {
            require('./karma.conf.js')(config);
            config.set({
              reporters: ['progress', 'coverage'],
              coverageReporter: {
                dir: path.join(__dirname, 'coverage'),
                reporters: [
                  { type: 'lcovonly', subdir: '.' },
                  { type: 'html',     subdir: 'html' }
                ],
                fixWebpackSourcePaths: true
              }
            });
          };
          JS

      - name: Run unit tests with CI Karma config (write LCOV)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y xvfb
          cat << 'SH' > /tmp/chrome-no-sandbox.sh
          #!/usr/bin/env bash
          BIN="$(command -v google-chrome || command -v google-chrome-stable || command -v chromium || command -v chromium-browser)"
          exec "$BIN" --no-sandbox --disable-setuid-sandbox --disable-gpu --disable-dev-shm-usage "$@"
          SH
          chmod +x /tmp/chrome-no-sandbox.sh
          export CHROME_BIN=/tmp/chrome-no-sandbox.sh
          xvfb-run -a npx ng test --watch=false --browsers=ChromeHeadless --code-coverage --karma-config=karma.ci.conf.js || true
          echo "== After tests, list coverage files =="; find coverage -type f -maxdepth 6 -print || true

      - name: Normalize coverage to LCOV (coverage/lcov.info)
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p coverage
          if [ -f coverage/lcov.info ] && [ -s coverage/lcov.info ]; then
            echo "‚úÖ LCOV present at coverage/lcov.info"
          else
            JSON="$(find . -path ./node_modules -prune -o -type f -name 'coverage-final.json' -print | head -n1 || true)"
            if [ -n "${JSON:-}" ]; then
              COVDIR="$(dirname "$JSON")"
              echo "Generating LCOV via nyc from: $JSON"
              npx nyc@15.1.0 report --reporter=lcov -t "$COVDIR" --report-dir "$COVDIR"
              [ -f "$COVDIR/lcov.info" ] && cp "$COVDIR/lcov.info" coverage/lcov.info || true
            fi
          fi

      # üîß Belangrijke fix: houd ALLE LCOV-records, maar maak padnamen plat (geen mappen => geen folder-rows)
      - name: Flatten LCOV paths (remove directories, keep all metrics)
        if: always()
        run: |
          if [ -s coverage/lcov.info ]; then
            awk '
              /^SF:/ {
                # Vervang pad door alleen de bestandsnaam
                n = split($0, a, /[\/\\]/);
                print "SF:" a[n];
                next
              }
              { print }
            ' coverage/lcov.info > coverage/lcov.flattened
            mv coverage/lcov.flattened coverage/lcov.info
            echo "‚úÖ Flattened paths in LCOV; directories zullen niet meer gegroepeerd worden."
          else
            echo "‚ö†Ô∏è No LCOV to flatten."
          fi

      - name: Better Test Reports Action
        if: always()
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: frontend/coverage/lcov.info
          upload-coverage-report: true
          working-directory: frontend

      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            frontend/coverage/**
            frontend/**/coverage/**
          if-no-files-found: ignore
          overwrite: true
