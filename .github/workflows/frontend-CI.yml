name: Frontend

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      # 1️⃣ Checkout de code (vereist voor elke workflow)
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js (gebruik juiste versie)
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      # 3️⃣ Dependencies installeren
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Build uitvoeren (zoals het lab voorschrijft)
      - name: Build the code
        run: npx ng build --configuration production || true

      # 5️⃣ Tests uitvoeren + coverage genereren
      - name: Test the code (unit tests + coverage)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y xvfb
          cat << 'SH' > /tmp/chrome-no-sandbox.sh
          #!/usr/bin/env bash
          BIN="$(command -v google-chrome || command -v google-chrome-stable || command -v chromium || command -v chromium-browser)"
          exec "$BIN" --no-sandbox --disable-setuid-sandbox --disable-gpu --disable-dev-shm-usage "$@"
          SH
          chmod +x /tmp/chrome-no-sandbox.sh
          export CHROME_BIN=/tmp/chrome-no-sandbox.sh

          xvfb-run -a npx ng test --watch=false --code-coverage --browsers=ChromeHeadless || true

          echo "== Dump coverage tree =="
          find . -maxdepth 5 -type d -name 'coverage' -print || true
          find . -maxdepth 6 -type f \( -name 'lcov.info' -o -name 'coverage-final.json' \) -print || true

      - name: Inspect raw coverage tree (debug)
        if: always()
        working-directory: frontend
        run: |
          echo "PWD=$(pwd)"
          echo "---- coverage (recursive) ----"
          ls -la || true
          [ -d coverage ] && ls -la coverage || true
          [ -d coverage ] && find coverage -type f -maxdepth 6 -print || true

     # 1) Inspect – laat in logs zien waar coverage staat
      - name: Inspect raw coverage tree
        if: always()
        working-directory: frontend
        run: |
          echo "PWD=$(pwd)"
          find . -type f \( -name 'lcov.info' -o -name 'coverage-final.json' \) -maxdepth 8 -print || true
      
      # 2) Normaliseer naar één pad: frontend/coverage/lcov.info
      - name: Normalize coverage to LCOV
        if: always()
        working-directory: frontend
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p coverage
      
          # a) al aanwezige lcov.info?
          EXISTING="$(find . -path ./node_modules -prune -o -type f -name 'lcov.info' -print | head -n1 || true)"
          if [ -n "${EXISTING:-}" ]; then
            echo "Found LCOV at: $EXISTING"
            cp "$EXISTING" coverage/lcov.info
          else
            # b) geen lcov? probeer uit Istanbul JSON te genereren
            JSON="$(find . -path ./node_modules -prune -o -type f -name 'coverage-final.json' -print | head -n1 || true)"
            if [ -n "${JSON:-}" ]; then
              COVDIR="$(dirname "$JSON")"
              echo "Generating LCOV from: $JSON"
              npx nyc@15.1.0 report --reporter=lcov -t "$COVDIR" --report-dir "$COVDIR"
              [ -f "$COVDIR/lcov.info" ] && cp "$COVDIR/lcov.info" coverage/lcov.info || true
            fi
          fi
      
          if [ -f coverage/lcov.info ]; then
            echo "✅ LCOV ready at frontend/coverage/lcov.info"
            wc -l coverage/lcov.info || true
            head -n 20 coverage/lcov.info || true
          else
            echo "❌ No LCOV produced."
          fi
      
      # 3) Hard check – faal de reporter bij leeg/bestaand-niet LCOV
      - name: Verify LCOV exists and is non-empty
        if: always()
        working-directory: frontend
        shell: bash
        run: |
          if [ ! -s coverage/lcov.info ]; then
            echo "No usable LCOV (missing or empty)."
            exit 0  # laat job doorlopen; reporter wordt overgeslagen
          fi
      
      # 4) Reporter – krijgt exact dit bestand
      - name: Better Test Reports Action
        if: ${{ always() && hashFiles('frontend/coverage/lcov.info') != '' }}
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: frontend/coverage/lcov.info
          upload-coverage-report: true
