name: Frontend

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      # 1Ô∏è‚É£ Checkout de code (vereist voor elke workflow)
      - name: Checkout
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js (gebruik juiste versie)
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      # 3Ô∏è‚É£ Dependencies installeren
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ Build uitvoeren (zoals het lab voorschrijft)
      - name: Build the code
        run: npx ng build --configuration production || true

      # 5Ô∏è‚É£ Tests uitvoeren + coverage genereren
      - name: Test the code (unit tests + coverage)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y xvfb
          cat << 'SH' > /tmp/chrome-no-sandbox.sh
          #!/usr/bin/env bash
          BIN="$(command -v google-chrome || command -v google-chrome-stable || command -v chromium || command -v chromium-browser)"
          exec "$BIN" --no-sandbox --disable-setuid-sandbox --disable-gpu --disable-dev-shm-usage "$@"
          SH
          chmod +x /tmp/chrome-no-sandbox.sh
          export CHROME_BIN=/tmp/chrome-no-sandbox.sh

          xvfb-run -a npx ng test --watch=false --code-coverage --browsers=ChromeHeadless || true

          echo "== Dump coverage tree =="
          find . -maxdepth 5 -type d -name 'coverage' -print || true
          find . -maxdepth 6 -type f \( -name 'lcov.info' -o -name 'coverage-final.json' \) -print || true

      # 6Ô∏è‚É£ Maak lcov.info aan als het ontbreekt (zet om van JSON)
      - name: Ensure lcov.info exists (convert if needed)
        shell: bash
        run: |
          set -euo pipefail
          if find . -maxdepth 6 -type f -name 'lcov.info' | grep -q . ; then
            echo "‚úÖ lcov.info already present."
            exit 0
          fi

          JSON="$(find . -maxdepth 6 -type f -name 'coverage-final.json' | head -n 1 || true)"
          if [ -n "${JSON:-}" ]; then
            COVDIR="$(dirname "$JSON")"
            echo "üìÑ Found coverage-final.json in $COVDIR ‚Äî generating lcov.info with nyc"
            npx nyc@15.1.0 report --reporter=lcov -t "$COVDIR" --report-dir "$COVDIR"
            ls -la "$COVDIR"
          else
            echo "‚ö†Ô∏è No coverage-final.json found; creating dummy lcov.info"
            mkdir -p coverage
            echo -e "TN:\nSF:dummy.ts\nDA:1,0\nLF:1\nLH:0\nend_of_record" > coverage/lcov.info
          fi

      # 7Ô∏è‚É£ Genereer mooi overzicht via Better Test Reports
      - name: Better Test Reports Action
        if: always()
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: frontend/coverage/lcov.info
          upload-coverage-report: true

      # 8Ô∏è‚É£ Upload HTML-coverage (optioneel artefact)
      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            frontend/**/coverage/**
            frontend/coverage/**
          if-no-files-found: ignore
