name: Frontend
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    # Alle npm/ng commands in de frontend-map
    defaults:
      run:
        working-directory: frontend

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node/NPM
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # 3) Dependencies
      - name: Install dependencies
        run: npm ci

      # 4) Build
      - name: Build the code
        run: npx ng build --configuration production

      # 5) Tests + coverage (laat doorlopen bij failures)
      - name: Test the code (unit tests + coverage)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          # CI-vriendelijke Chrome wrapper (no sandbox)
          cat << 'SH' > /tmp/chrome-no-sandbox.sh
          #!/usr/bin/env bash
          BIN="$(command -v google-chrome || command -v google-chrome-stable || command -v chromium || command -v chromium-browser)"
          exec "$BIN" --no-sandbox --disable-setuid-sandbox --disable-gpu --disable-dev-shm-usage "$@"
          SH
          chmod +x /tmp/chrome-no-sandbox.sh
          export CHROME_BIN=/tmp/chrome-no-sandbox.sh

          xvfb-run -a npx ng test --watch=false --code-coverage --browsers=ChromeHeadless || true
        continue-on-error: true

       # 6) Vind het échte lcov.info (ongeacht waar karma het neerzet)
      - name: Find lcov.info
        id: lcov
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          echo "PWD=$(pwd)"
          # We zitten in working-directory: frontend (via defaults.run)
          # Zoek maximaal 4 niveaus diep zodat alle gangbare paden meedoen.
          FOUND="$(find . -type f -name lcov.info -maxdepth 4 | head -n 1 || true)"
          if [ -n "${FOUND:-}" ]; then
            # strip de leading "./" zodat het pad netjes is voor de action input
            FOUND="${FOUND#./}"
            echo "Gevonden coverage-bestand: $FOUND"
            echo "lcov=$FOUND" >> "$GITHUB_OUTPUT"
          else
            echo "Geen lcov.info gevonden."
            echo "lcov=" >> "$GITHUB_OUTPUT"
          fi

      # 7) Better Test Reports Action (alleen draaien als we een pad hebben)
      - name: Better Test Reports Action
        if: ${{ always() && steps.lcov.outputs.lcov != '' }}
        uses: mridang/action-test-reporter@v1.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: frontend              # inputs zijn t.o.v. repo-root; met working-directory kan je pad korter blijven
          coverage-file: ${{ steps.lcov.outputs.lcov }}
          upload-coverage-report: true

      # 8) (optioneel) HTML coverage uploaden – zoek breed zodat we niets missen
      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            frontend/coverage/**
            frontend/**/coverage/**
          if-no-files-found: ignore
